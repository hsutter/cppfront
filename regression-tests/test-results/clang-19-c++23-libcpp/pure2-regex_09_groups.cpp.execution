Running tests_09_groups:
01_y: OK regex: ()ef parsed_regex: ()ef str: def result_expr: $&-$1 expected_results ef-
02_y: OK regex: ()ef parsed_regex: ()ef str: def result_expr: $-[0] expected_results 1
03_y: OK regex: ()ef parsed_regex: ()ef str: def result_expr: $+[0] expected_results 3
04_y: OK regex: ()ef parsed_regex: ()ef str: def result_expr: $-[1] expected_results 1
05_y: OK regex: ()ef parsed_regex: ()ef str: def result_expr: $+[1] expected_results 1
06_y: OK regex: ((a)) parsed_regex: ((a)) str: abc result_expr: $&-$1-$2 expected_results a-a-a
07_y: OK regex: ((a)) parsed_regex: ((a)) str: abc result_expr: $-[0]-$-[1]-$-[2] expected_results 0-0-0
08_y: OK regex: ((a)) parsed_regex: ((a)) str: abc result_expr: $+[0]-$+[1]-$+[2] expected_results 1-1-1
09_y: OK regex: (a)b(c) parsed_regex: (a)b(c) str: abc result_expr: $&-$1-$2 expected_results abc-a-c
10_y: OK regex: (a)b(c) parsed_regex: (a)b(c) str: abc result_expr: $-[0]-$-[1]-$-[2] expected_results 0-0-2
11_y: OK regex: (a)b(c) parsed_regex: (a)b(c) str: abc result_expr: $+[0]-$+[1]-$+[2] expected_results 3-1-3

